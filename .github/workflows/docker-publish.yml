name: Publish docker image

on:
  schedule:
    - cron: '0 0 * * MON'
  push:
    branches:
      - main
    paths:
      - ".github/workflows/docker-publish.yml"
      - "Dockerfile"
      - "DESCRIPTION_*"
      - "docker_startup_manage_users.bash"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/docker-publish.yml"
      - "Dockerfile"
      - "DESCRIPTION_*"
    types:
      - closed
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  #REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # R packages are cached for speed. Invalidate cache weekly.
  R_SYSTEM_LIBRARY_PATH: /usr/local/lib/R/site-library

jobs:
  build:
    strategy:
      fail-fast: false # stop GH from cancelling all matrix builds if one fails
      matrix:
        # https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        include:
          - os: ubuntu-latest
            platform: amd64
          - os: ubuntu-24.04-arm
            platform: arm64
    
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write
    
    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set dgpsi folder name
        run: echo "DGPSI_FOLDER_NAME=$(curl -sSL https://raw.githubusercontent.com/mingdeyu/dgpsi-R/refs/heads/master/R/initi_py.R | grep "env_name *<-" | grep --invert-match "^\s*#" | grep --only-matching --perl-regexp 'dgp.*\d')" >> $GITHUB_ENV
      
      #- name: Cache R packages
      #  uses: actions/cache@v4
      #  with:
      #    path: ${{ env.R_SYSTEM_LIBRARY_PATH }}
      #    key: ${{ runner.os }}-r-library-${{ env.TIMESTAMP }}
      #    restore-keys: |
      #      ${{ runner.os }}-r-library-${{ env.TIMESTAMP }}

      ## https://github.com/docker/setup-qemu-action
      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v3

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: timotheebacri
          password: ${{ secrets.DOCKERHUB_DOCKER_TOKEN_RSTUDIO_SECRET }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: timotheebacri/rstudio:latest-${{ matrix.platform }}
          #platforms: linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          build-args: DGPSI_FOLDER_NAME=${{ env.DGPSI_FOLDER_NAME }}
          #cache-from: type=gha
          #cache-to: type=gha,mode=max
          cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}
          cache-to: type=inline
